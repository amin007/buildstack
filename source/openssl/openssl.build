#!/bin/bash
# cenbia build script: nawawi@rutweb.com
# openssl: http://www.openssl.org/

NAME="openssl";
VER="1.0.1e";
SRC_FILE="${NAME}-${VER}.tar.gz";
SRC_DIR="${NAME}-${VER}";
DLURL="http://www.openssl.org/source/ http://dl.cenbia.com/pkg";

# load config
source "../../build.d/source-config.sh" &>/dev/null;
[ -z "${INST_DIR}" ] && { echo "${NAME}: Load config failed"; exit 1; };

_build_setup_and_patch "${SRC_FILE}" "${SRC_DIR}" "${DLURL}";

CFLAGS+=" -Wa,--noexecstack -DPURIFY";
export CFLAGS;

./config \
--prefix=$INST_DIR \
--openssldir=$INST_DIR/etc/pki/tls \
--with-zlib-include=$INST_DIR/include \
--with-zlib-lib=$INST_DIR/lib \
--with-krb5-flavor=MIT \
--with-krb5-dir=$INST_DIR \
zlib enable-camellia enable-seed enable-tlsext enable-rfc3779 \
enable-cms enable-md2 no-mdc2 no-rc5 no-ec no-ec2m no-ecdh no-ecdsa no-srp fips \
shared

_exit_when_failed "Configure" "$?";

make depend
_exit_when_failed "Make depend" "$?";

# failed if SMPFLAGS
make all;
_exit_when_failed "Make" "$?";

make install;
ret=$?;

if [ "$ret" = "0" ]; then
    if pushd $INST_DIR/lib; then
        libsslso="$(readlink libssl.so)";
        [ "x${libsslso}" != "x" ] && ln -sf $libsslso libssl.so.1.0.0;
        libcryptoso="$(readlink libcrypto.so)";
        [ "x${libcryptoso}" != "x" ] && ln -sf $libcryptoso libcrypto.so.1.0.0;
        popd;
    fi

    _pdir="${INST_DIR}/etc/pki/tls/certs";
    rm -f $_pdir/*;

    if [ -f "../patches/Makefile.certificate" ]; then
        cp -fv ../patches/Makefile.certificate $_pdir/Makefile;
        sed -i -e "s|@INST_DIR|$INST_DIR|g" $_pdir/Makefile;
    fi
    if [ -f "../patches/make-dummy-cert" ]; then
        cp -fv ../patches/make-dummy-cert $_pdir/make-dummy-cert;
        sed -i -e "s|@INST_DIR|$INST_DIR|g" $_pdir/make-dummy-cert;
        sed -i -e "s|/bin/sh|/bin/bash|g" $_pdir/make-dummy-cert;
        chmod 755 $_pdir/make-dummy-cert;
    fi
    if [ -f "../patches/ca-bundle.crt" ]; then
        cp -fv ../patches/ca-bundle.crt $_pdir/ca-bundle.crt;
    fi

    rsync -artl $INST_DIR/etc/pki/tls/man/* $INST_DIR/share/man/
    rm -rf $INST_DIR/etc/pki/tls/man
fi

_exit_and_cleanup "$ret" "${SRC_DIR}";

